import pygame
import sys

# Inicialização do Pygame
pygame.init()

# Definindo algumas constantes
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
ROBOT_SIZE = 50
RED = (255, 0, 0)
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Criando a janela
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Robot Adventure")

# Classe para representar o robô
class Robot(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((ROBOT_SIZE, ROBOT_SIZE))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.center = (SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2)
        self.speed = 5
        self.angle = 0

    def update(self):
        # Movendo o robô para frente
        self.rect.x += self.speed * pygame.math.cos(self.angle)
        self.rect.y -= self.speed * pygame.math.sin(self.angle)
        
        # Verificando colisão com a parede
        if self.rect.left < 0 or self.rect.right > SCREEN_WIDTH or self.rect.top < 0 or self.rect.bottom > SCREEN_HEIGHT:
            self.angle += pygame.math.pi / 2

        # Desenhando o robô
        screen.blit(self.image, self.rect)

# Função para controlar o jogo
def main():
    clock = pygame.time.Clock()
    robot = Robot()
    all_sprites = pygame.sprite.Group()
    all_sprites.add(robot)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            robot.angle -= 0.1
        if keys[pygame.K_RIGHT]:
            robot.angle += 0.1
        if keys[pygame.K_UP]:
            robot.speed = 5
        else:
            robot.speed = 0

        # Atualizando a posição do robô
        robot.update()

        # Atualizando a tela
        screen.fill(WHITE)
        all_sprites.draw(screen)
        pygame.display.flip()
        clock.tick(60)

if __name__ == "__main__":
    main()
